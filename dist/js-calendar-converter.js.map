{"version":3,"file":"js-calendar-converter.js","sources":["../src/constant/Lunar.js","../src/constant/ChineseEra.js","../src/constant/ChineseZodiac.js","../src/constant/Festival.js","../src/constant/SolarTerm.js","../src/constant/Salutation.js","../src/index.js"],"sourcesContent":["const lunarInfo = [0x04bd8, 0x04ae0, 0x0a570, 0x054d5, 0x0d260, 0x0d950, 0x16554, 0x056a0, 0x09ad0, 0x055d2,//1900-1909\r\n  0x04ae0, 0x0a5b6, 0x0a4d0, 0x0d250, 0x1d255, 0x0b540, 0x0d6a0, 0x0ada2, 0x095b0, 0x14977,//1910-1919\r\n  0x04970, 0x0a4b0, 0x0b4b5, 0x06a50, 0x06d40, 0x1ab54, 0x02b60, 0x09570, 0x052f2, 0x04970,//1920-1929\r\n  0x06566, 0x0d4a0, 0x0ea50, 0x16a95, 0x05ad0, 0x02b60, 0x186e3, 0x092e0, 0x1c8d7, 0x0c950,//1930-1939\r\n  0x0d4a0, 0x1d8a6, 0x0b550, 0x056a0, 0x1a5b4, 0x025d0, 0x092d0, 0x0d2b2, 0x0a950, 0x0b557,//1940-1949\r\n  0x06ca0, 0x0b550, 0x15355, 0x04da0, 0x0a5b0, 0x14573, 0x052b0, 0x0a9a8, 0x0e950, 0x06aa0,//1950-1959\r\n  0x0aea6, 0x0ab50, 0x04b60, 0x0aae4, 0x0a570, 0x05260, 0x0f263, 0x0d950, 0x05b57, 0x056a0,//1960-1969\r\n  0x096d0, 0x04dd5, 0x04ad0, 0x0a4d0, 0x0d4d4, 0x0d250, 0x0d558, 0x0b540, 0x0b6a0, 0x195a6,//1970-1979\r\n  0x095b0, 0x049b0, 0x0a974, 0x0a4b0, 0x0b27a, 0x06a50, 0x06d40, 0x0af46, 0x0ab60, 0x09570,//1980-1989\r\n  0x04af5, 0x04970, 0x064b0, 0x074a3, 0x0ea50, 0x06b58, 0x05ac0, 0x0ab60, 0x096d5, 0x092e0,//1990-1999\r\n  0x0c960, 0x0d954, 0x0d4a0, 0x0da50, 0x07552, 0x056a0, 0x0abb7, 0x025d0, 0x092d0, 0x0cab5,//2000-2009\r\n  0x0a950, 0x0b4a0, 0x0baa4, 0x0ad50, 0x055d9, 0x04ba0, 0x0a5b0, 0x15176, 0x052b0, 0x0a930,//2010-2019\r\n  0x07954, 0x06aa0, 0x0ad50, 0x05b52, 0x04b60, 0x0a6e6, 0x0a4e0, 0x0d260, 0x0ea65, 0x0d530,//2020-2029\r\n  0x05aa0, 0x076a3, 0x096d0, 0x04afb, 0x04ad0, 0x0a4d0, 0x1d0b6, 0x0d250, 0x0d520, 0x0dd45,//2030-2039\r\n  0x0b5a0, 0x056d0, 0x055b2, 0x049b0, 0x0a577, 0x0a4b0, 0x0aa50, 0x1b255, 0x06d20, 0x0ada0,//2040-2049\r\n  /**Add By JJonline@JJonline.Cn**/\r\n  0x14b63, 0x09370, 0x049f8, 0x04970, 0x064b0, 0x168a6, 0x0ea50, 0x06b20, 0x1a6c4, 0x0aae0,//2050-2059\r\n  0x092e0, 0x0d2e3, 0x0c960, 0x0d557, 0x0d4a0, 0x0da50, 0x05d55, 0x056a0, 0x0a6d0, 0x055d4,//2060-2069\r\n  0x052d0, 0x0a9b8, 0x0a950, 0x0b4a0, 0x0b6a6, 0x0ad50, 0x055a0, 0x0aba4, 0x0a5b0, 0x052b0,//2070-2079\r\n  0x0b273, 0x06930, 0x07337, 0x06aa0, 0x0ad50, 0x14b55, 0x04b60, 0x0a570, 0x054e4, 0x0d160,//2080-2089\r\n  0x0e968, 0x0d520, 0x0daa0, 0x16aa6, 0x056d0, 0x04ae0, 0x0a9d4, 0x0a2d0, 0x0d150, 0x0f252,//2090-2099\r\n  0x0d520];//2100\r\n\r\nconst solarMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nexport { lunarInfo, solarMonth }","const Gan = [\"\\u7532\", \"\\u4e59\", \"\\u4e19\", \"\\u4e01\", \"\\u620a\", \"\\u5df1\", \"\\u5e9a\", \"\\u8f9b\", \"\\u58ec\", \"\\u7678\"];\nconst Zhi = [\"\\u5b50\", \"\\u4e11\", \"\\u5bc5\", \"\\u536f\", \"\\u8fb0\", \"\\u5df3\", \"\\u5348\", \"\\u672a\", \"\\u7533\", \"\\u9149\", \"\\u620c\", \"\\u4ea5\"];\n\nexport { Gan, Zhi }","const ChineseZodiac = [\"\\u9f20\", \"\\u725b\", \"\\u864e\", \"\\u5154\", \"\\u9f99\", \"\\u86c7\", \"\\u9a6c\", \"\\u7f8a\", \"\\u7334\", \"\\u9e21\", \"\\u72d7\", \"\\u732a\"];\n\nexport { ChineseZodiac };","const festival = {\n  '1-1': { title: '元旦节' },\n  '2-14': { title: '情人节' },\n  '5-1': { title: '劳动节' },\n  '5-4': { title: '青年节' },\n  '6-1': { title: '儿童节' },\n  '9-10': { title: '教师节' },\n  '10-1': { title: '国庆节' },\n  '12-25': { title: '圣诞节' },\n\n  '3-8': { title: '妇女节' },\n  '3-12': { title: '植树节' },\n  '4-1': { title: '愚人节' },\n  '5-12': { title: '护士节' },\n  '7-1': { title: '建党节' },\n  '8-1': { title: '建军节' },\n  '12-24': { title: '平安夜' },\n};\n\nconst lFestival = {\n  '12-30': { title: '除夕' },\n  '1-1': { title: '春节' },\n  '1-15': { title: '元宵节' },\n  '2-2': { title: '龙抬头' },\n  '5-5': { title: '端午节' },\n  '7-7': { title: '七夕节' },\n  '7-15': { title: '中元节' },\n  '8-15': { title: '中秋节' },\n  '9-9': { title: '重阳节' },\n  '10-1': { title: '寒衣节' },\n  '10-15': { title: '下元节' },\n  '12-8': { title: '腊八节' },\n  '12-23': { title: '北方小年' },\n  '12-24': { title: '南方小年' },\n};\n\nexport { lFestival, festival }","const solarTerm = [\"\\u5c0f\\u5bd2\", \"\\u5927\\u5bd2\", \"\\u7acb\\u6625\", \"\\u96e8\\u6c34\", \"\\u60ca\\u86f0\", \"\\u6625\\u5206\", \"\\u6e05\\u660e\", \"\\u8c37\\u96e8\", \"\\u7acb\\u590f\", \"\\u5c0f\\u6ee1\", \"\\u8292\\u79cd\", \"\\u590f\\u81f3\", \"\\u5c0f\\u6691\", \"\\u5927\\u6691\", \"\\u7acb\\u79cb\", \"\\u5904\\u6691\", \"\\u767d\\u9732\", \"\\u79cb\\u5206\", \"\\u5bd2\\u9732\", \"\\u971c\\u964d\", \"\\u7acb\\u51ac\", \"\\u5c0f\\u96ea\", \"\\u5927\\u96ea\", \"\\u51ac\\u81f3\"];\r\nconst sTermInfo = ['9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c3598082c95f8c965cc920f',\r\n  '97bd0b06bdb0722c965ce1cfcc920f', 'b027097bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e',\r\n  '97bcf97c359801ec95f8c965cc920f', '97bd0b06bdb0722c965ce1cfcc920f', 'b027097bd097c36b0b6fc9274c91aa',\r\n  '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f', '97bd0b06bdb0722c965ce1cfcc920f',\r\n  'b027097bd097c36b0b6fc9274c91aa', '9778397bd19801ec9210c965cc920e', '97b6b97bd19801ec95f8c965cc920f',\r\n  '97bd09801d98082c95f8e1cfcc920f', '97bd097bd097c36b0b6fc9210c8dc2', '9778397bd197c36c9210c9274c91aa',\r\n  '97b6b97bd19801ec95f8c965cc920e', '97bd09801d98082c95f8e1cfcc920f', '97bd097bd097c36b0b6fc9210c8dc2',\r\n  '9778397bd097c36c9210c9274c91aa', '97b6b97bd19801ec95f8c965cc920e', '97bcf97c3598082c95f8e1cfcc920f',\r\n  '97bd097bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c91aa', '97b6b97bd19801ec9210c965cc920e',\r\n  '97bcf97c3598082c95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\r\n  '97b6b97bd19801ec9210c965cc920e', '97bcf97c3598082c95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722',\r\n  '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f',\r\n  '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e',\r\n  '97bcf97c359801ec95f8c965cc920f', '97bd097bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\r\n  '97b6b97bd19801ec9210c965cc920e', '97bcf97c359801ec95f8c965cc920f', '97bd097bd07f595b0b6fc920fb0722',\r\n  '9778397bd097c36b0b6fc9210c8dc2', '9778397bd19801ec9210c9274c920e', '97b6b97bd19801ec95f8c965cc920f',\r\n  '97bd07f5307f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c920e',\r\n  '97b6b97bd19801ec95f8c965cc920f', '97bd07f5307f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2',\r\n  '9778397bd097c36c9210c9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bd07f1487f595b0b0bc920fb0722',\r\n  '7f0e397bd097c36b0b6fc9210c8dc2', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e',\r\n  '97bcf7f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\r\n  '97b6b97bd19801ec9210c965cc920e', '97bcf7f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722',\r\n  '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e', '97bcf7f1487f531b0b0bb0b6fb0722',\r\n  '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b97bd19801ec9210c965cc920e',\r\n  '97bcf7f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\r\n  '97b6b97bd19801ec9210c9274c920e', '97bcf7f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722',\r\n  '9778397bd097c36b0b6fc9210c91aa', '97b6b97bd197c36c9210c9274c920e', '97bcf7f0e47f531b0b0bb0b6fb0722',\r\n  '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9210c8dc2', '9778397bd097c36c9210c9274c920e',\r\n  '97b6b7f0e47f531b0723b0b6fb0722', '7f0e37f5307f595b0b0bc920fb0722', '7f0e397bd097c36b0b6fc9210c8dc2',\r\n  '9778397bd097c36b0b70c9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721', '7f0e37f1487f595b0b0bb0b6fb0722',\r\n  '7f0e397bd097c35b0b6fc9210c8dc2', '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721',\r\n  '7f0e27f1487f595b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\r\n  '97b6b7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722',\r\n  '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722',\r\n  '7f0e397bd097c35b0b6fc920fb0722', '9778397bd097c36b0b6fc9274c91aa', '97b6b7f0e47f531b0723b0b6fb0721',\r\n  '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9274c91aa',\r\n  '97b6b7f0e47f531b0723b0787b0721', '7f0e27f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722',\r\n  '9778397bd097c36b0b6fc9210c91aa', '97b6b7f0e47f149b0723b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722',\r\n  '7f0e397bd07f595b0b0bc920fb0722', '9778397bd097c36b0b6fc9210c8dc2', '977837f0e37f149b0723b0787b0721',\r\n  '7f07e7f0e47f531b0723b0b6fb0722', '7f0e37f5307f595b0b0bc920fb0722', '7f0e397bd097c35b0b6fc9210c8dc2',\r\n  '977837f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e37f1487f595b0b0bb0b6fb0722',\r\n  '7f0e397bd097c35b0b6fc9210c8dc2', '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721',\r\n  '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722', '977837f0e37f14998082b0787b06bd',\r\n  '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd097c35b0b6fc920fb0722',\r\n  '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722',\r\n  '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721',\r\n  '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14998082b0787b06bd',\r\n  '7f07e7f0e47f149b0723b0787b0721', '7f0e27f0e47f531b0b0bb0b6fb0722', '7f0e397bd07f595b0b0bc920fb0722',\r\n  '977837f0e37f14998082b0723b06bd', '7f07e7f0e37f149b0723b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722',\r\n  '7f0e397bd07f595b0b0bc920fb0722', '977837f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b0721',\r\n  '7f07e7f0e47f531b0723b0b6fb0722', '7f0e37f1487f595b0b0bb0b6fb0722', '7f0e37f0e37f14898082b0723b02d5',\r\n  '7ec967f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0722', '7f0e37f1487f531b0b0bb0b6fb0722',\r\n  '7f0e37f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721',\r\n  '7f0e37f1487f531b0b0bb0b6fb0722', '7f0e37f0e37f14898082b072297c35', '7ec967f0e37f14998082b0787b06bd',\r\n  '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e37f0e37f14898082b072297c35',\r\n  '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722',\r\n  '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f149b0723b0787b0721',\r\n  '7f0e27f1487f531b0b0bb0b6fb0722', '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14998082b0723b06bd',\r\n  '7f07e7f0e47f149b0723b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722', '7f0e37f0e366aa89801eb072297c35',\r\n  '7ec967f0e37f14998082b0723b06bd', '7f07e7f0e37f14998083b0787b0721', '7f0e27f0e47f531b0723b0b6fb0722',\r\n  '7f0e37f0e366aa89801eb072297c35', '7ec967f0e37f14898082b0723b02d5', '7f07e7f0e37f14998082b0787b0721',\r\n  '7f07e7f0e47f531b0723b0b6fb0722', '7f0e36665b66aa89801e9808297c35', '665f67f0e37f14898082b0723b02d5',\r\n  '7ec967f0e37f14998082b0787b0721', '7f07e7f0e47f531b0723b0b6fb0722', '7f0e36665b66a449801e9808297c35',\r\n  '665f67f0e37f14898082b0723b02d5', '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721',\r\n  '7f0e36665b66a449801e9808297c35', '665f67f0e37f14898082b072297c35', '7ec967f0e37f14998082b0787b06bd',\r\n  '7f07e7f0e47f531b0723b0b6fb0721', '7f0e26665b66a449801e9808297c35', '665f67f0e37f1489801eb072297c35',\r\n  '7ec967f0e37f14998082b0787b06bd', '7f07e7f0e47f531b0723b0b6fb0721', '7f0e27f1487f531b0b0bb0b6fb0722'];\r\n\r\nexport { solarTerm, sTermInfo }","const nStr1 = [\"\\u65e5\", \"\\u4e00\", \"\\u4e8c\", \"\\u4e09\", \"\\u56db\", \"\\u4e94\", \"\\u516d\", \"\\u4e03\", \"\\u516b\", \"\\u4e5d\", \"\\u5341\"];\r\nconst nStr2 = [\"\\u521d\", \"\\u5341\", \"\\u5eff\", \"\\u5345\"];\r\nconst nStr3 = [\"\\u6b63\", \"\\u4e8c\", \"\\u4e09\", \"\\u56db\", \"\\u4e94\", \"\\u516d\", \"\\u4e03\", \"\\u516b\", \"\\u4e5d\", \"\\u5341\", \"\\u51ac\", \"\\u814a\"];\r\n\r\nexport { nStr1, nStr2, nStr3 }","/**\r\n * @1900-2100区间内的公历、农历互转\r\n * @charset UTF-8\r\n * @Author  Jea杨(JJonline@JJonline.Cn)\r\n * @Time    2014-7-21\r\n * @Time    2016-8-13 Fixed 2033hex、Attribution Annals\r\n * @Time    2016-9-25 Fixed lunar LeapMonth Param Bug\r\n * @Time    2017-7-24 Fixed use getTerm Func Param Error.use solar year,NOT lunar year\r\n * @Version 1.0.3\r\n * @公历转农历：calendar.solar2lunar(1987,11,01); //[you can ignore params of prefix 0]\r\n * @农历转公历：calendar.lunar2solar(1987,09,10); //[you can ignore params of prefix 0]\r\n */\r\n\r\nimport { lunarInfo, solarMonth } from './constant/Lunar'\r\nimport { Gan, Zhi } from './constant/ChineseEra'\r\nimport { ChineseZodiac as Animals } from './constant/ChineseZodiac'\r\nimport { lFestival, festival } from './constant/Festival'\r\nimport { solarTerm, sTermInfo } from './constant/SolarTerm'\r\nimport { nStr1, nStr2, nStr3 } from './constant/Salutation'\r\n\r\nconst calendar = {\r\n\r\n  /**\r\n   * 农历1900-2100的润大小信息表\r\n   * @Array Of Property\r\n   * @return Hex\r\n   */\r\n  lunarInfo,\r\n\r\n  /**\r\n   * 公历每个月份的天数普通表\r\n   * @Array Of Property\r\n   * @return Number\r\n   */\r\n  solarMonth,\r\n\r\n  /**\r\n   * 天干地支之天干速查表\r\n   * @Array Of Property trans[\"甲\",\"乙\",\"丙\",\"丁\",\"戊\",\"己\",\"庚\",\"辛\",\"壬\",\"癸\"]\r\n   * @return Cn string\r\n   */\r\n  Gan,\r\n\r\n  /**\r\n   * 天干地支之地支速查表\r\n   * @Array Of Property\r\n   * @trans[\"子\",\"丑\",\"寅\",\"卯\",\"辰\",\"巳\",\"午\",\"未\",\"申\",\"酉\",\"戌\",\"亥\"]\r\n   * @return Cn string\r\n   */\r\n  Zhi,\r\n\r\n  /**\r\n   * 天干地支之地支速查表<=>生肖\r\n   * @Array Of Property\r\n   * @trans[\"鼠\",\"牛\",\"虎\",\"兔\",\"龙\",\"蛇\",\"马\",\"羊\",\"猴\",\"鸡\",\"狗\",\"猪\"]\r\n   * @return Cn string\r\n   */\r\n  Animals,\r\n\r\n  /**\r\n   * 阳历节日\r\n   */\r\n  festival,\r\n\r\n  /**\r\n   * 农历节日\r\n   */\r\n  lFestival,\r\n\r\n  /**\r\n   * 24节气速查表\r\n   * @Array Of Property\r\n   * @trans[\"小寒\",\"大寒\",\"立春\",\"雨水\",\"惊蛰\",\"春分\",\"清明\",\"谷雨\",\"立夏\",\"小满\",\"芒种\",\"夏至\",\"小暑\",\"大暑\",\"立秋\",\"处暑\",\"白露\",\"秋分\",\"寒露\",\"霜降\",\"立冬\",\"小雪\",\"大雪\",\"冬至\"]\r\n   * @return Cn string\r\n   */\r\n  solarTerm,\r\n\r\n  /**\r\n   * 1900-2100各年的24节气日期速查表\r\n   * @Array Of Property\r\n   * @return 0x string For splice\r\n   */\r\n  sTermInfo,\r\n\r\n  /**\r\n   * 数字转中文速查表\r\n   * @Array Of Property\r\n   * @trans ['日','一','二','三','四','五','六','七','八','九','十']\r\n   * @return Cn string\r\n   */\r\n  nStr1,\r\n\r\n  /**\r\n   * 日期转农历称呼速查表\r\n   * @Array Of Property\r\n   * @trans ['初','十','廿','卅']\r\n   * @return Cn string\r\n   */\r\n  nStr2,\r\n\r\n  /**\r\n   * 月份转农历称呼速查表\r\n   * @Array Of Property\r\n   * @trans ['正','一','二','三','四','五','六','七','八','九','十','冬','腊']\r\n   * @return Cn string\r\n   */\r\n  nStr3,\r\n\r\n  /**\r\n   * 返回默认定义的阳历节日\r\n   */\r\n  getFestival() {\r\n    return this.festival\r\n  },\r\n\r\n  /**\r\n   * 返回默认定义的内容里节日\r\n   */\r\n  getLunarFestival() {\r\n    return this.lFestival\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param param {Object} 按照festival的格式输入数据，设置阳历节日\r\n   */\r\n  setFestival(param = {}) {\r\n    this.festival = param\r\n  },\r\n\r\n  /**\r\n   *\r\n   * @param param {Object} 按照lFestival的格式输入数据，设置农历节日\r\n   */\r\n  setLunarFestival(param = {}) {\r\n    this.lFestival = param\r\n  },\r\n\r\n\r\n\r\n  /**\r\n   * 返回农历y年一整年的总天数\r\n   * @param y lunar Year\r\n   * @return Number\r\n   * @eg:var count = calendar.lYearDays(1987) ;//count=387\r\n   */\r\n  lYearDays: function (y) {\r\n    let i, sum = 348;\r\n    for (i = 0x8000; i > 0x8; i >>= 1) {\r\n      sum += (this.lunarInfo[y - 1900] & i) ? 1 : 0;\r\n    }\r\n    return (sum + this.leapDays(y));\r\n  },\r\n\r\n  /**\r\n   * 返回农历y年闰月是哪个月；若y年没有闰月 则返回0\r\n   * @param y lunar Year\r\n   * @return Number (0-12)\r\n   * @eg:var leapMonth = calendar.leapMonth(1987) ;//leapMonth=6\r\n   */\r\n  leapMonth: function (y) { //闰字编码 \\u95f0\r\n    return (this.lunarInfo[y - 1900] & 0xf);\r\n  },\r\n\r\n  /**\r\n   * 返回农历y年闰月的天数 若该年没有闰月则返回0\r\n   * @param y lunar Year\r\n   * @return Number (0、29、30)\r\n   * @eg:var leapMonthDay = calendar.leapDays(1987) ;//leapMonthDay=29\r\n   */\r\n  leapDays: function (y) {\r\n    if (this.leapMonth(y)) {\r\n      return ((this.lunarInfo[y - 1900] & 0x10000) ? 30 : 29);\r\n    }\r\n    return (0);\r\n  },\r\n\r\n  /**\r\n   * 返回农历y年m月（非闰月）的总天数，计算m为闰月时的天数请使用leapDays方法\r\n   * @param y lunar Year\r\n   * @param m lunar Month\r\n   * @return Number (-1、29、30)\r\n   * @eg:var MonthDay = calendar.monthDays(1987,9) ;//MonthDay=29\r\n   */\r\n  monthDays: function (y, m) {\r\n    if (m > 12 || m < 1) {\r\n      return -1\r\n    }//月份参数从1至12，参数错误返回-1\r\n    return ((this.lunarInfo[y - 1900] & (0x10000 >> m)) ? 30 : 29);\r\n  },\r\n\r\n  /**\r\n   * 返回公历(!)y年m月的天数\r\n   * @param y solar Year\r\n   * @param m solar Month\r\n   * @return Number (-1、28、29、30、31)\r\n   * @eg:var solarMonthDay = calendar.leapDays(1987) ;//solarMonthDay=30\r\n   */\r\n  solarDays: function (y, m) {\r\n    if (m > 12 || m < 1) {\r\n      return -1\r\n    } //若参数错误 返回-1\r\n    const ms = m - 1;\r\n    if (ms === 1) { //2月份的闰平规律测算后确认返回28或29\r\n      return (((y % 4 === 0) && (y % 100 !== 0) || (y % 400 === 0)) ? 29 : 28);\r\n    } else {\r\n      return (this.solarMonth[ms]);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * 农历年份转换为干支纪年\r\n   * @param  lYear 农历年的年份数\r\n   * @return Cn string\r\n   */\r\n  toGanZhiYear: function (lYear) {\r\n    var ganKey = (lYear - 3) % 10;\r\n    var zhiKey = (lYear - 3) % 12;\r\n    if (ganKey === 0) ganKey = 10;//如果余数为0则为最后一个天干\r\n    if (zhiKey === 0) zhiKey = 12;//如果余数为0则为最后一个地支\r\n    return this.Gan[ganKey - 1] + this.Zhi[zhiKey - 1];\r\n\r\n  },\r\n\r\n  /**\r\n   * 公历月、日判断所属星座\r\n   * @param  cMonth [description]\r\n   * @param  cDay [description]\r\n   * @return Cn string\r\n   */\r\n  toAstro: function (cMonth, cDay) {\r\n    const s = \"\\u6469\\u7faf\\u6c34\\u74f6\\u53cc\\u9c7c\\u767d\\u7f8a\\u91d1\\u725b\\u53cc\\u5b50\\u5de8\\u87f9\\u72ee\\u5b50\\u5904\\u5973\\u5929\\u79e4\\u5929\\u874e\\u5c04\\u624b\\u6469\\u7faf\";\r\n    const arr = [20, 19, 21, 21, 21, 22, 23, 23, 23, 23, 22, 22];\r\n    return s.substr(cMonth * 2 - (cDay < arr[cMonth - 1] ? 2 : 0), 2) + \"\\u5ea7\";//座\r\n  },\r\n\r\n  /**\r\n   * 传入offset偏移量返回干支\r\n   * @param offset 相对甲子的偏移量\r\n   * @return Cn string\r\n   */\r\n  toGanZhi: function (offset) {\r\n    return this.Gan[offset % 10] + this.Zhi[offset % 12];\r\n  },\r\n\r\n  /**\r\n   * 传入公历(!)y年获得该年第n个节气的公历日期\r\n   * @param y y公历年(1900-2100)\r\n   * @param n n二十四节气中的第几个节气(1~24)；从n=1(小寒)算起\r\n   * @return day Number\r\n   * @eg:var _24 = calendar.getTerm(1987,3) ;//_24=4;意即1987年2月4日立春\r\n   */\r\n  getTerm: function (y, n) {\r\n    if (y < 1900 || y > 2100 || n < 1 || n > 24) {\r\n      return -1;\r\n    }\r\n    const _table = this.sTermInfo[y - 1900];\r\n    const _calcDay = []\r\n    for (let index = 0; index < _table.length; index += 5) {\r\n      const chunk = parseInt('0x' + _table.substr(index, 5)).toString()\r\n      _calcDay.push(\r\n        chunk[0],\r\n        chunk.substr(1, 2),\r\n        chunk[3],\r\n        chunk.substr(4, 2)\r\n      )\r\n    }\r\n    return parseInt(_calcDay[n - 1]);\r\n  },\r\n\r\n  /**\r\n   * 传入农历数字月份返回汉语通俗表示法\r\n   * @param m lunar month\r\n   * @return Cn string\r\n   * @eg:var cnMonth = calendar.toChinaMonth(12) ;//cnMonth='腊月'\r\n   */\r\n  toChinaMonth: function (m) { // 月 => \\u6708\r\n    if (m > 12 || m < 1) {\r\n      return -1\r\n    } //若参数错误 返回-1\r\n    let s = this.nStr3[m - 1];\r\n    s += \"\\u6708\";//加上月字\r\n    return s;\r\n  },\r\n\r\n  /**\r\n   * 传入农历日期数字返回汉字表示法\r\n   * @param d lunar day\r\n   * @return Cn string\r\n   * @eg:var cnDay = calendar.toChinaDay(21) ;//cnMonth='廿一'\r\n   */\r\n  toChinaDay: function (d) { //日 => \\u65e5\r\n    let s;\r\n    switch (d) {\r\n      case 10:\r\n        s = '\\u521d\\u5341';\r\n        break;\r\n      case 20:\r\n        s = '\\u4e8c\\u5341';\r\n        break;\r\n      case 30:\r\n        s = '\\u4e09\\u5341';\r\n        break;\r\n      default:\r\n        s = this.nStr2[Math.floor(d / 10)];\r\n        s += this.nStr1[d % 10];\r\n    }\r\n    return (s);\r\n  },\r\n\r\n  /**\r\n   * 年份转生肖[!仅能大致转换] => 精确划分生肖分界线是“立春”\r\n   * @param y year\r\n   * @return Cn string\r\n   * @eg:var animal = calendar.getAnimal(1987) ;//animal='兔'\r\n   */\r\n  getAnimal: function (y) {\r\n    return this.Animals[(y - 4) % 12]\r\n  },\r\n\r\n  /**\r\n   * 传入阳历年月日获得详细的公历、农历object信息 <=>JSON\r\n   * !important! 公历参数区间1900.1.31~2100.12.31\r\n   * @param yPara  solar year\r\n   * @param mPara  solar month\r\n   * @param dPara  solar day\r\n   * @return JSON object\r\n   * @eg:console.log(calendar.solar2lunar(1987,11,01));\r\n   */\r\n  solar2lunar: function (yPara, mPara, dPara) {\r\n    let y = parseInt(yPara);\r\n    let m = parseInt(mPara);\r\n    let d = parseInt(dPara);\r\n    //年份限定、上限\r\n    if (y < 1900 || y > 2100) {\r\n      return -1;// undefined转换为数字变为NaN\r\n    }\r\n    //公历传参最下限\r\n    if (y === 1900 && m === 1 && d < 31) {\r\n      return -1;\r\n    }\r\n\r\n    //未传参  获得当天\r\n    let objDate;\r\n    if (!y) {\r\n      objDate = new Date();\r\n    } else {\r\n      objDate = new Date(y, parseInt(m) - 1, d);\r\n    }\r\n    let i, leap = 0, temp = 0;\r\n    //修正ymd参数\r\n    y = objDate.getFullYear();\r\n    m = objDate.getMonth() + 1;\r\n    d = objDate.getDate();\r\n    let offset = (Date.UTC(objDate.getFullYear(), objDate.getMonth(), objDate.getDate()) - Date.UTC(1900, 0, 31)) / 86400000;\r\n    for (i = 1900; i < 2101 && offset > 0; i++) {\r\n      temp = this.lYearDays(i);\r\n      offset -= temp;\r\n    }\r\n    if (offset < 0) {\r\n      offset += temp;\r\n      i--;\r\n    }\r\n\r\n    //是否今天\r\n    let isTodayObj = new Date(),\r\n      isToday = false;\r\n    if (isTodayObj.getFullYear() === y && isTodayObj.getMonth() + 1 === m && isTodayObj.getDate() === d) {\r\n      isToday = true;\r\n    }\r\n    //星期几\r\n    let nWeek = objDate.getDay(),\r\n      cWeek = this.nStr1[nWeek];\r\n    //数字表示周几顺应天朝周一开始的惯例\r\n    if (nWeek === 0) {\r\n      nWeek = 7;\r\n    }\r\n    //农历年\r\n    const year = i;\r\n    leap = this.leapMonth(i); //闰哪个月\r\n    let isLeap = false;\r\n\r\n    //效验闰月\r\n    for (i = 1; i < 13 && offset > 0; i++) {\r\n      //闰月\r\n      if (leap > 0 && i === (leap + 1) && isLeap === false) {\r\n        --i;\r\n        isLeap = true;\r\n        temp = this.leapDays(year); //计算农历闰月天数\r\n      } else {\r\n        temp = this.monthDays(year, i);//计算农历普通月天数\r\n      }\r\n      //解除闰月\r\n      if (isLeap === true && i === (leap + 1)) {\r\n        isLeap = false;\r\n      }\r\n      offset -= temp;\r\n    }\r\n    // 闰月导致数组下标重叠取反\r\n    if (offset === 0 && leap > 0 && i === leap + 1) {\r\n      if (isLeap) {\r\n        isLeap = false;\r\n      } else {\r\n        isLeap = true;\r\n        --i;\r\n      }\r\n    }\r\n    if (offset < 0) {\r\n      offset += temp;\r\n      --i;\r\n    }\r\n    //农历月\r\n    const month = i;\r\n    //农历日\r\n    const day = offset + 1;\r\n    //天干地支处理\r\n    const sm = m - 1;\r\n    const gzY = this.toGanZhiYear(year);\r\n\r\n    // 当月的两个节气\r\n    // bugfix-2017-7-24 11:03:38 use lunar Year Param `y` Not `year`\r\n    const firstNode = this.getTerm(y, (m * 2 - 1));//返回当月「节」为几日开始\r\n    const secondNode = this.getTerm(y, (m * 2));//返回当月「节」为几日开始\r\n\r\n    // 依据12节气修正干支月\r\n    let gzM = this.toGanZhi((y - 1900) * 12 + m + 11);\r\n    if (d >= firstNode) {\r\n      gzM = this.toGanZhi((y - 1900) * 12 + m + 12);\r\n    }\r\n\r\n    //传入的日期的节气与否\r\n    let isTerm = false;\r\n    let Term = null;\r\n    if (firstNode === d) {\r\n      isTerm = true;\r\n      Term = this.solarTerm[m * 2 - 2];\r\n    }\r\n    if (secondNode === d) {\r\n      isTerm = true;\r\n      Term = this.solarTerm[m * 2 - 1];\r\n    }\r\n    //日柱 当月一日与 1900/1/1 相差天数\r\n    const dayCyclical = Date.UTC(y, sm, 1, 0, 0, 0, 0) / 86400000 + 25567 + 10;\r\n    const gzD = this.toGanZhi(dayCyclical + d - 1);\r\n    //该日期所属的星座\r\n    const astro = this.toAstro(m, d);\r\n\r\n    const solarDate = y + '-' + m + '-' + d;\r\n    const lunarDate = year + '-' + month + '-' + day;\r\n\r\n    const festival = this.festival;\r\n    const lFestival = this.lFestival;\r\n\r\n    const festivalDate = m + '-' + d;\r\n    let lunarFestivalDate = month + '-' + day;\r\n\r\n    // bugfix https://github.com/jjonline/calendar.js/issues/29\r\n    // 农历节日修正：农历12月小月则29号除夕，大月则30号除夕\r\n    // 此处取巧修正：当前为农历12月29号时增加一次判断并且把lunarFestivalDate设置为12-30以正确取得除夕\r\n    // 天朝农历节日遇闰月过前不过后的原则，此处取农历12月天数不考虑闰月\r\n    // 农历润12月在本工具支持的200年区间内仅1574年出现\r\n    if (month === 12 && day === 29 && this.monthDays(year, month) === 29) {\r\n      lunarFestivalDate = '12-30';\r\n    }\r\n    return {\r\n      date: solarDate,\r\n      lunarDate: lunarDate,\r\n      festival: festival[festivalDate] ? festival[festivalDate].title : null,\r\n      lunarFestival: lFestival[lunarFestivalDate] ? lFestival[lunarFestivalDate].title : null,\r\n      'lYear': year,\r\n      'lMonth': month,\r\n      'lDay': day,\r\n      'Animal': this.getAnimal(year),\r\n      'IMonthCn': (isLeap ? \"\\u95f0\" : '') + this.toChinaMonth(month),\r\n      'IDayCn': this.toChinaDay(day),\r\n      'cYear': y,\r\n      'cMonth': m,\r\n      'cDay': d,\r\n      'gzYear': gzY,\r\n      'gzMonth': gzM,\r\n      'gzDay': gzD,\r\n      'isToday': isToday,\r\n      'isLeap': isLeap,\r\n      'nWeek': nWeek,\r\n      'ncWeek': \"\\u661f\\u671f\" + cWeek,\r\n      'isTerm': isTerm,\r\n      'Term': Term,\r\n      'astro': astro\r\n    };\r\n  },\r\n\r\n  /**\r\n   * 传入农历年月日以及传入的月份是否闰月获得详细的公历、农历object信息 <=>JSON\r\n   * !important! 参数区间1900.1.31~2100.12.1\r\n   * @param y  lunar year\r\n   * @param m  lunar month\r\n   * @param d  lunar day\r\n   * @param isLeapMonth  lunar month is leap or not.[如果是农历闰月第四个参数赋值true即可]\r\n   * @return JSON object\r\n   * @eg:console.log(calendar.lunar2solar(1987,9,10));\r\n   */\r\n  lunar2solar: function (y, m, d, isLeapMonth) {\r\n    y = parseInt(y)\r\n    m = parseInt(m)\r\n    d = parseInt(d)\r\n    isLeapMonth = !!isLeapMonth;\r\n    const leapOffset = 0;\r\n    const leapMonth = this.leapMonth(y);\r\n    const leapDay = this.leapDays(y);\r\n    if (isLeapMonth && (leapMonth !== m)) {\r\n      return -1;\r\n    }//传参要求计算该闰月公历 但该年得出的闰月与传参的月份并不同\r\n    if (y === 2100 && m === 12 && d > 1 || y === 1900 && m === 1 && d < 31) {\r\n      return -1;\r\n    }//超出了最大极限值\r\n    const day = this.monthDays(y, m);\r\n    let _day = day;\r\n    //bugFix 2016-9-25\r\n    //if month is leap, _day use leapDays method\r\n    if (isLeapMonth) {\r\n      _day = this.leapDays(y);\r\n    }\r\n    if (y < 1900 || y > 2100 || d > _day) {\r\n      return -1;\r\n    }//参数合法性效验\r\n\r\n    //计算农历的时间差\r\n    let offset = 0;\r\n    let i;\r\n    for (i = 1900; i < y; i++) {\r\n      offset += this.lYearDays(i);\r\n    }\r\n    let leap = 0, isAdd = false;\r\n    for (i = 1; i < m; i++) {\r\n      leap = this.leapMonth(y);\r\n      if (!isAdd) {//处理闰月\r\n        if (leap <= i && leap > 0) {\r\n          offset += this.leapDays(y);\r\n          isAdd = true;\r\n        }\r\n      }\r\n      offset += this.monthDays(y, i);\r\n    }\r\n    //转换闰月农历 需补充该年闰月的前一个月的时差\r\n    if (isLeapMonth) {\r\n      offset += day;\r\n    }\r\n    //1900年农历正月一日的公历时间为1900年1月30日0时0分0秒(该时间也是本农历的最开始起始点)\r\n    const strap = Date.UTC(1900, 1, 30, 0, 0, 0);\r\n    const calObj = new Date((offset + d - 31) * 86400000 + strap);\r\n    const cY = calObj.getUTCFullYear();\r\n    const cM = calObj.getUTCMonth() + 1;\r\n    const cD = calObj.getUTCDate();\r\n\r\n    return this.solar2lunar(cY, cM, cD);\r\n  }\r\n};\r\n\r\nexport default calendar;\r\n"],"names":["lunarInfo","solarMonth","Gan","Zhi","ChineseZodiac","festival","title","lFestival","solarTerm","sTermInfo","nStr1","nStr2","nStr3","calendar","Animals","getFestival","getLunarFestival","setFestival","param","arguments","length","undefined","setLunarFestival","lYearDays","y","i","sum","leapDays","leapMonth","monthDays","m","solarDays","ms","toGanZhiYear","lYear","ganKey","zhiKey","toAstro","cMonth","cDay","s","arr","substr","toGanZhi","offset","getTerm","n","_table","_calcDay","index","chunk","parseInt","toString","push","toChinaMonth","toChinaDay","d","Math","floor","getAnimal","solar2lunar","yPara","mPara","dPara","objDate","Date","leap","temp","getFullYear","getMonth","getDate","UTC","isTodayObj","isToday","nWeek","getDay","cWeek","year","isLeap","month","day","sm","gzY","firstNode","secondNode","gzM","isTerm","Term","dayCyclical","gzD","astro","solarDate","lunarDate","festivalDate","lunarFestivalDate","date","lunarFestival","lunar2solar","isLeapMonth","_day","isAdd","strap","calObj","cY","getUTCFullYear","cM","getUTCMonth","cD","getUTCDate"],"mappings":"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AgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,EACpG,gCAAgC,EAAE,gCAAgC,EAAE,gCAAgC,CAAC;;ECnEvG,IAAMC,KAAK,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,Q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"}